version: '3.9'
services:
  consumer:
    container_name: bet_maker_consumer
    build:
      context: .
      dockerfile: docker/Dockerfile-consumer
    restart: always
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./:/code
    networks:
      - betting_network

  web:
    container_name: bet_maker
    build:
      dockerfile: docker/Dockerfile
    env_file:
      - .env
    environment:
      BIND_PORT: ${BIND_PORT}
      BIND_HOST: ${BIND_HOST}
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${BIND_PORT}:${BIND_PORT}"
    volumes:
      - ./:/code
    networks:
      - betting_network

  postgres:
    container_name: bet_maker_postgres
    image: library/postgres:16
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DBNAME}
    restart: on-failure
    command: [ "postgres", "-c", "log_statement=none", "-c", "log_destination=stderr" ]
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${PG_USER}", "-d", "${PG_DBNAME}" ]
      interval: 5s
      retries: 5
    networks:
      - betting_network

networks:
  betting_network:
    external: True
